#!/bin/bash

# Step 0: Determine the default shell and set the config file accordingly
DEFAULT_SHELL=$(basename "$SHELL")

if [ "$DEFAULT_SHELL" = "zsh" ]; then
    CONFIG_FILE="$HOME/.zshrc"
elif [ "$DEFAULT_SHELL" = "bash" ]; then
    CONFIG_FILE="$HOME/.bashrc"
else
    echo "Unsupported shell: $DEFAULT_SHELL"
    exit 1
fi

# Step 1: Add environment variable exports to the appropriate config file
cat <<EOL >> "$CONFIG_FILE"

# Proxy configurations
export http_proxy="http://"
export https_proxy="http://"
export no_proxy="169.254.169.254"

# PATH configuration
export PATH="/\$USER/.local/bin:\$PATH"
EOL

# Step 2: Print the newly added entries
echo "Added the following entries to $CONFIG_FILE:"
echo 'export http_proxy="http://"'
echo 'export https_proxy="http://"'
echo 'export no_proxy="169.254.169.254"'
echo 'export PATH="/$USER/.local/bin:$PATH"'

# Step 3: Download the get-pip.py script
echo "Downloading get-pip.py..."
curl -O https://bootstrap.pypa.io/get-pip.py

# Step 4: Check if the get-pip.py is downloaded
if [ -f get-pip.py ]; then
    echo "get-pip.py downloaded successfully."
else
    echo "Failed to download get-pip.py."
    exit 1
fi

# Step 5: Install pip using get-pip.py
echo "Installing pip..."
python3 get-pip.py

# Step 6: Check if pip installation was successful
if python3 -m pip --version > /dev/null 2>&1; then
    echo "pip installed successfully."
else
    echo "pip installation failed."
    exit 1
fi

# Step 7: Install pipx using pip3
echo "Installing pipx..."
pip3 install pipx

# Step 8: Ensure pipx's path is set up
echo "Setting up pipx..."
pipx ensurepath
source "$CONFIG_FILE"

# Step 9: Install tools using pipx
echo "Installing scoutsuite, prowler, and pacu using pipx..."
pipx install scoutsuite
pipx install prowler
pipx install pacu

# Step 10: Check if awscli is installed
if command -v aws &> /dev/null; then
    echo "awscli is installed. Configuring the profile..."
    
    # Automatically configure awscli with default settings
    aws configure set region us-east-1
    aws configure set output json

    # Ask the user for AWS Account ID
    read -p "Enter your AWS Account ID: " AWS_ACCOUNT_ID

    # Update the AWS config file with the given Account ID
    mkdir -p ~/.aws
    cat <<EOL > ~/.aws/credentials
[User]
role_arn = arn:aws:iam::$AWS_ACCOUNT_ID:role/eec-aws-pentest-role
credential_source = Ec2InstanceMetadata
EOL
    echo "AWS profile configured successfully."
else
    echo "awscli is not installed. Please install it first."
    exit 1
fi
